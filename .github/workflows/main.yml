# Nome do workflow
name: CI
#--------------------------------------------------------------------------------------------------------------------------------------------------

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
#------------------------------------------------------------------------------------------------------------------------------------------------------------

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Passo que utiliza a ação 'checkout' para clonar o repositório em execução
      - name: Check out repository
        uses: actions/checkout@v4.1.3  
#------------------------------------------------------------------------------------------------------------------------------------------------------------
      # Passo para instalar a versão 3.12 do Python usando a ação 'setup-python'
      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.12'
#------------------------------------------------------------------------------------------------------------------------------------------------------------
      # Passo para instalar as dependências necessárias para os testes usando pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install robotframework
          pip install robotframework-SeleniumLibrary
          pip install setuptools
          pip install robotframework-Faker
#------------------------------------------------------------------------------------------------------------------------------------------------------------
      # Passo para instalar o SikuliX
      - name: Install SikuliX
        run: |
          choco install jdk8
          # Verificar se o JAVA_HOME está configurado corretamente
          $env:PATH += ';C:\Program Files\Java\jdk1.8.0_211\bin'
          # Baixar o SikuliX
          Invoke-WebRequest -Uri "https://launchpad.net/sikuli/sikulix/2.0.5/+download/sikulixide-2.0.5-win.jar" -OutFile "sikulixide-2.0.5-win.jar"
          # Verificar se o arquivo foi baixado corretamente
          if (!(Test-Path -Path "sikulixide-2.0.5-win.jar")) {
            throw "O download do SikuliX falhou."
          }
          # Executar o jar do SikuliX
          java -jar sikulixide-2.0.5-win.jar
        shell: powershell
#------------------------------------------------------------------------------------------------------------------------------------------------------------
      # Passo para configurar a resolução da tela
      - name: Set screen resolution
        run: |
          Install-Module -Name DisplaySettings -Scope CurrentUser -Force
          Set-DisplayResolution -Width 1920 -Height 1080 -Force
        shell: powershell
#------------------------------------------------------------------------------------------------------------------------------------------------------------
      # Passo para executar os testes do Robot Framework, especificamente os casos de teste localizados em './swag_labs/test_case_swaglabs'
      - name: Run Robot Framework tests
      # A opção '-d ./logs' especifica o diretório de saída dos logs
        run: |
          robot -d ./logs -i regression ./tests
#------------------------------------------------------------------------------------------------------------------------------------------------------------
      # Passo para usar a ação 'robotframework-reporter-action' para gerar um relatório dos testes
      - name: Robot Reporter
        uses: joonvena/robotframework-reporter-action@v2.4
      # A condição 'if: always()' garante que este passo seja sempre executado, independentemente do resultado dos passos anteriores
        if: always()
      # Configurações adicionais são passadas, como o token de acesso do GitHub e o caminho do relatório
        with:
          gh_access_token: ${{ secrets.GITHUB_TOKEN }}
          report_path: logs 
#------------------------------------------------------------------------------------------------------------------------------------------------------------
      # Passo para fazer upload dos logs gerados como artefato do workflow
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4.3.2
      # Isso permite que os logs sejam acessíveis para referência futura
        with:
          name: test-results
          path: logs
#------------------------------------------------------------------------------------------------------------------------------------------------------------

                

